@page "/"

<h3>Create Your Roster</h3>

@if (string.IsNullOrEmpty(AccessToken))
{
    <a href="@LoginUrl">Login with GitHub</a>
}
else
{
    <EditForm Model="@roster" OnValidSubmit="SubmitRoster">
        <InputText @bind-Value="roster.PlayerName" placeholder="Player Name" />
        <InputText @bind-Value="roster.Origin" placeholder="Origin" />
        <InputText @bind-Value="roster.Role" placeholder="Role" />
        <InputText @bind-Value="roster.Weapons" placeholder="Weapons (comma separated)" />
        <InputText @bind-Value="roster.Equipment" placeholder="Equipment (comma separated)" />
        <button type="submit">Submit Roster</button>
    </EditForm>
}

<pre>@MarkdownOutput</pre>

@code {
    string AccessToken;
    string LoginUrl = "https://github.com/login/oauth/authorize?client_id=Ov23liBph0qDNAAkNZqm&scope=repo&redirect_uri=https://wzdaley.github.io/Zone/auth-callback.html";

    Roster roster = new();
    string MarkdownOutput;

    async Task SubmitRoster()
    {
        var md = $@"# {roster.PlayerName}'s Roster
- Origin: {roster.Origin}
- Role: {roster.Role}
- Weapons: {roster.Weapons}
- Equipment: {roster.Equipment}";

        MarkdownOutput = md;

        using var http = new HttpClient();
        http.DefaultRequestHeaders.UserAgent.ParseAdd("ZoneRosterApp");
        http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", AccessToken);

        var body = new
        {
            message = $"Add roster for {roster.PlayerName}",
            content = Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(md))
        };

        var response = await http.PutAsJsonAsync(
            $"https://api.github.com/repos/wzdaley/Zone/contents/rosters/{roster.PlayerName}.md",
            body);

        if (!response.IsSuccessStatusCode)
        {
            MarkdownOutput = "GitHub API error: " + response.StatusCode;
        }
    }

    public class Roster
    {
        public string PlayerName { get; set; }
        public string Origin { get; set; }
        public string Role { get; set; }
        public string Weapons { get; set; }
        public string Equipment { get; set; }
    }
}
